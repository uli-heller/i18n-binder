######################################################################################################
###                                                                                                ###
###   PROPERTIES OF THE I18NBINDER                                                                 ###
###                                                                                                ###
######################################################################################################


# Folder where the property files are located
i18nDirectory = i18n_src

# Filename of the XLS or XLSX file (Important: the file suffix decides about the file format!)
xlsFilename = i18n_all.xlsx

# Filename of the created Java facade source file. The facade is only created if createJavaFacade is set to true
javaFacadeFilename          = I18nFacade.java
packageName                 =
baseNameInTargetPlattform   =  

# If set to true the Java facade will generate all subtypes as new separated Java files instead of one single nested Java class
externalizeTypes            = false

# Regular expression filter for locales
# E.g. de_DE|en_US will only select this two locales for conversion processes
localeFilterRegex = .*

# Regular expression pattern which defines the locale extracted from each filename
# by declaring a regular expression group around the locale token.
#
# Example1
#
# fileNameLocaleGroupPattern = .*?_(\\w{2,3}_\\w{2,3})\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 1
# 
# will match the locales like "de_DE" or "en_US".
#
# Example2
#
# fileNameLocaleGroupPattern = .*?((_\\w{2,3}_\\w{2,3})|(_\\w{2,3})|())\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 2,3,4
#
# will define the locale at the end of each file before the .properties ending 
# including files with no locale, too.
#
#
#
# Hints: This behaves like the Java Pattern class, including the need to encode the pattern. 
#        Groups are defined using the "(" and ")" brackets.
#
#        If you define more than one group, you have to provide the group index of each group
#        matching a locale. This is done with the help of the "fileNameLocaleGroupPatternGroupIndexList" 
#        variable.
#
# See the templates in the next paragraph for ideas
#
fileNameLocaleGroupPattern =.*?((_\\w{2,3}_\\w{2,3})|(_\\w{2,3})|())\\.\\w*

# A list of group indexes. If you are not familiar with the regular expression grouping,
# just count the numbers of opening brackets to the point your locale groups starts, beginning with 1, 
# and add each index as comma separated list to this property. 
#
# Within the example1 at fileNameLocaleGroupPattern the group index is "1" 
# and within the Example2 the group index is a list as following: "2,3,4"
#
fileNameLocaleGroupPatternGroupIndexList = 2,3,4

######################################################################################################
# More template examples for locale extraction or grouping patterns

##
# Single occurrence of the locale at the end of the filename within the path
# __________________________________________________________
# i18n_src\subfolder1\Administration_en_GB.properties
# i18n_src\subfolder1\Administration_en_US.properties
# ...
# __________________________________________________________
# i18n_src\subfolder1\Administration_{locale}.properties
#

# fileNameLocaleGroupPattern = .*?_((\\w{2,3}_\\w{2,3})|(\\w{2,3}))\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 2,3

##
# Single occurrence of the locale at the end of the filename within the path including files with no locale
# __________________________________________________________
# i18n_src\subfolder1\Administration_en_GB.properties
# i18n_src\subfolder1\Administration_en_US.properties
# ...
# i18n_src\subfolder1\Administration.properties
# ...
# __________________________________________________________
# i18n_src\subfolder1\Administration{locale}.properties
#

# fileNameLocaleGroupPattern = .*?((_\\w{2,3}_\\w{2,3})|(_\\w{2,3})|())\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 2,3,4

##
# Multiple occurring of the same locale within the path
# __________________________________________________________
# i18n_src\en_GB\Administration_en_GB.properties
# i18n_src\en_US\Administration_en_US.properties
# ...
# __________________________________________________________
# i18n_src\{locale}\Administration_{locale}.properties
#

# fileNameLocaleGroupPattern = .*?\\\\((\\w{2,3}_\\w{2,3})|(\\w{2,3}))\\\\.*?_((\\w{2,3}_\\w{2,3})|(\\w{2,3}))\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 2,3,5,6

##
# Locale as first folder name
# __________________________________________________________
# i18n_src\en_GB\Administration.properties
# i18n_src\de_DE\Administration.properties
# ...
# __________________________________________________________
# i18n_src\{locale}\Administration.properties
#

# fileNameLocaleGroupPattern = .*?\\\\((\\w{2,3}_\\w{2,3})|(\\w{2,3}))\\\\.*?\\.\\w*
# fileNameLocaleGroupPatternGroupIndexList = 2,3


######################################################################################################



# The file encoding of the property files
fileEncoding = UTF-8

# Defines if properties with a assigned blank value in the XLS file are deleted 
# when written back to the property files
deletePropertiesWithBlankValue = false

# Logs the current state of the conversion to the console if set to "true"
logInfo = true